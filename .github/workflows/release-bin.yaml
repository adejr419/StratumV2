# This workflow is used to create a new release with a binary distribution or SRI roles
# If the binary releases fails due to not having tags, force run the `autoversion` workflow
# on the main branch and merge the resulting PR to create the tags and move them to the main branch.

name: Release Binaries

on:
  # Manually run by going to "Actions/Release" in Github and running the workflow
  workflow_dispatch:

jobs:
  release_pool:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-20.04, macos-latest]
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Set env
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

      - name: Compile Native
        run: cargo build --release --locked --manifest-path=roles/pool/Cargo.toml

      - name: Install cross
        run: cargo install cross

      - name: Compile Binaries for aarch64-unknown-linux-gnu
        if: matrix.os == 'ubuntu-20.04'
        run: cross build --release --locked --manifest-path=roles/pool/Cargo.toml --target aarch64-unknown-linux-gnu

      - name: Compile Binaries for arm-unknown-linux-gnueabi
        if: matrix.os == 'ubuntu-20.04'
        run: cross build --release --locked --manifest-path=roles/pool/Cargo.toml --target arm-unknown-linux-gnueabi

      - name: Install aarch64-apple-darwin target
        if: matrix.os == 'macos-latest'
        run: rustup target add aarch64-apple-darwin

      - name: Compile MacOS ARM64
        if: matrix.os == 'macos-latest'
        run: cargo build --release --locked --manifest-path=roles/pool/Cargo.toml --target=aarch64-apple-darwin

      - name: Upload Linux x86-64 binaries to release
        if: matrix.os == 'ubuntu-20.04'
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: roles/target/release/pool_sv2
          asset_name: pool-sv2-${{ env.RELEASE_VERSION }}-x86_64-linux-gnu
          tag: ${{ env.RELEASE_VERSION }}

      - name: Upload MacOS x86-64 binaries to release
        if: matrix.os == 'macos-latest'
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: roles/target/release/pool_sv2
          asset_name: pool-sv2-${{ env.RELEASE_VERSION }}-x86_64-apple-darwin
          tag: ${{ env.RELEASE_VERSION }}
          
      - name: Upload Linux aarch64 binaries to release
        if: matrix.os == 'ubuntu-20.04'
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: roles/target/aarch64-unknown-linux-gnu/release/pool_sv2
          asset_name: pool-sv2-${{ env.RELEASE_VERSION }}-aarch64-linux-gnu
          tag: ${{ env.RELEASE_VERSION }}
          
      - name: Upload Linux ARM binaries to release
        if: matrix.os == 'ubuntu-20.04'
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: roles/target/arm-unknown-linux-gnueabi/release/pool_sv2
          asset_name: pool-sv2-${{ env.RELEASE_VERSION }}-arm-linux-gnueabi
          tag: ${{ env.RELEASE_VERSION }}

      - name: Upload MacOS ARM64 binaries to release
        if: matrix.os == 'macos-latest'
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: roles/target/aarch64-apple-darwin/release/pool_sv2
          asset_name: pool-sv2-${{ env.RELEASE_VERSION }}-aarch64-apple-darwin
          tag: ${{ env.RELEASE_VERSION }}

  release_jdc:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-20.04, macos-latest ]
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - name: Compile Native
        run: cargo build --release --locked --manifest-path=roles/jd-client/Cargo.toml

      - name: Set env
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
      
      - name: Install cross
        run: cargo install cross

      - name: Compile Binaries for aarch64-unknown-linux-gnu
        if: matrix.os == 'ubuntu-20.04'
        run: cross build --release --locked --manifest-path=roles/jd-client/Cargo.toml --target aarch64-unknown-linux-gnu
  
      - name: Compile Binaries for arm-unknown-linux-gnueabi
        if: matrix.os == 'ubuntu-20.04'
        run: cross build --release --locked --manifest-path=roles/jd-client/Cargo.toml --target arm-unknown-linux-gnueabi

      - name: Install aarch64-apple-darwin target
        if: matrix.os == 'macos-latest'
        run: rustup target add aarch64-apple-darwin

      - name: Compile MacOS ARM64
        if: matrix.os == 'macos-latest'
        run: cargo build --release --locked --manifest-path=roles/jd-client/Cargo.toml --target=aarch64-apple-darwin

      - name: Upload Linux x86-64 binaries to release
        if: matrix.os == 'ubuntu-20.04'
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: roles/target/release/jd_client
          asset_name: jd-client-sv2-${{ env.RELEASE_VERSION }}-x86_64-linux-gnu
          tag: ${{ env.RELEASE_VERSION }}
          
      - name: Upload Linux aarch64 binaries to release
        if: matrix.os == 'ubuntu-20.04'
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: roles/target/aarch64-unknown-linux-gnu/release/jd_client
          asset_name: jd-client-sv2-${{ env.RELEASE_VERSION }}-aarch64-linux-gnu
          tag: ${{ env.RELEASE_VERSION }}
          
      - name: Upload Linux ARM binaries to release
        if: matrix.os == 'ubuntu-20.04'
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: roles/target/arm-unknown-linux-gnueabi/release/jd_client
          asset_name: jd-client-sv2-${{ env.RELEASE_VERSION }}-arm-linux-gnueabi
          tag: ${{ env.RELEASE_VERSION }}

      - name: Upload MacOS x86-64 binaries to release
        if: matrix.os == 'macos-latest'
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: roles/target/release/jd_client
          asset_name: jd-client-sv2-${{ env.RELEASE_VERSION }}-x86_64-apple-darwin
          tag: ${{ env.RELEASE_VERSION }}

      - name: Upload MacOS ARM64 binaries to release
        if: matrix.os == 'macos-latest'
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: roles/target/aarch64-apple-darwin/release/jd_client
          asset_name: jd-client-sv2-${{ env.RELEASE_VERSION }}-aarch64-apple-darwin
          tag: ${{ env.RELEASE_VERSION }}

  release_jds:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-20.04, macos-latest ]
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Set env
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

      - name: Compile Native
        run: cargo build --release --locked --manifest-path=roles/jd-server/Cargo.toml
        
      - name: Install cross
        run: cargo install cross

      - name: Compile Binaries for aarch64-unknown-linux-gnu
        if: matrix.os == 'ubuntu-20.04'
        run: cross build --release --locked --manifest-path=roles/jd-server/Cargo.toml --target aarch64-unknown-linux-gnu
  
      - name: Compile Binaries for arm-unknown-linux-gnueabi
        if: matrix.os == 'ubuntu-20.04'
        run: cross build --release --locked --manifest-path=roles/jd-server/Cargo.toml --target arm-unknown-linux-gnueabi

      - name: Install aarch64-apple-darwin target
        if: matrix.os == 'macos-latest'
        run: rustup target add aarch64-apple-darwin

      - name: Compile MacOS ARM64
        if: matrix.os == 'macos-latest'
        run: cargo build --release --locked --manifest-path=roles/jd-server/Cargo.toml --target=aarch64-apple-darwin

      - name: Upload Linux x86-64 binaries to release
        if: matrix.os == 'ubuntu-20.04'
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: roles/target/release/jd_server
          asset_name: jd-server-sv2-${{ env.RELEASE_VERSION }}-x86_64-linux-gnu
          tag: ${{ env.RELEASE_VERSION }}
          
      - name: Upload Linux aarch64 binaries to release
        if: matrix.os == 'ubuntu-20.04'
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: roles/target/aarch64-unknown-linux-gnu/release/jd_server
          asset_name: jd-server-sv2-${{ env.RELEASE_VERSION }}-aarch64-linux-gnu
          tag: ${{ env.RELEASE_VERSION }}

      - name: Upload Linux ARM binaries to release
        if: matrix.os == 'ubuntu-20.04'
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: roles/target/arm-unknown-linux-gnueabi/release/jd_server
          asset_name: jd-server-sv2-${{ env.RELEASE_VERSION }}-arm-linux-gnueabi
          tag: ${{ env.RELEASE_VERSION }}

      - name: Upload MacOS x86-64 binaries to release
        if: matrix.os == 'macos-latest'
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: roles/target/release/jd_server
          asset_name: jd-server-sv2-${{ env.RELEASE_VERSION }}-x86_64-apple-darwin
          tag: ${{ env.RELEASE_VERSION }}

      - name: Upload MacOS ARM64 binaries to release
        if: matrix.os == 'macos-latest'
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: roles/target/aarch64-apple-darwin/release/jd_server
          asset_name: jd-server-sv2-${{ env.RELEASE_VERSION }}-aarch64-apple-darwin
          tag: ${{ env.RELEASE_VERSION }}

  release_proxy:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-20.04, macos-latest ]
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Set env
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

      - name: Compile Native
        run: cargo build --release --locked --manifest-path=roles/mining-proxy/Cargo.toml
              
      - name: Install cross
        run: cargo install cross

      - name: Compile Binaries for aarch64-unknown-linux-gnu
        if: matrix.os == 'ubuntu-20.04'
        run: cross build --release --locked --manifest-path=roles/mining-proxy/Cargo.toml --target aarch64-unknown-linux-gnu
  
      - name: Compile Binaries for arm-unknown-linux-gnueabi
        if: matrix.os == 'ubuntu-20.04'
        run: cross build --release --locked --manifest-path=roles/mining-proxy/Cargo.toml --target arm-unknown-linux-gnueabi

      - name: Install aarch64-apple-darwin target
        if: matrix.os == 'macos-latest'
        run: rustup target add aarch64-apple-darwin

      - name: Compile MacOS ARM64
        if: matrix.os == 'macos-latest'
        run: cargo build --release --locked --manifest-path=roles/mining-proxy/Cargo.toml --target=aarch64-apple-darwin

      - name: Upload Linux x86-64 binaries to release
        if: matrix.os == 'ubuntu-20.04'
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: roles/target/release/mining_proxy_sv2
          asset_name: mining-proxy-sv2-${{ env.RELEASE_VERSION }}-x86_64-linux-gnu
          tag: ${{ env.RELEASE_VERSION }}
          
      - name: Upload Linux aarch64 binaries to release
        if: matrix.os == 'ubuntu-20.04'
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: roles/target/aarch64-unknown-linux-gnu/release/mining_proxy_sv2
          asset_name: mining-proxy-sv2-${{ env.RELEASE_VERSION }}-aarch64-linux-gnu
          tag: ${{ env.RELEASE_VERSION }}
          
      - name: Upload Linux ARM binaries to release
        if: matrix.os == 'ubuntu-20.04'
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: roles/target/arm-unknown-linux-gnueabi/release/mining_proxy_sv2
          asset_name: mining-proxy-sv2-${{ env.RELEASE_VERSION }}-arm-linux-gnueabi
          tag: ${{ env.RELEASE_VERSION }}

      - name: Upload MacOS x86-64 binaries to release
        if: matrix.os == 'macos-latest'
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: roles/target/release/mining_proxy_sv2
          asset_name: mining-proxy-sv2-${{ env.RELEASE_VERSION }}-x86_64-apple-darwin
          tag: ${{ env.RELEASE_VERSION }}

      - name: Upload MacOS ARM64 binaries to release
        if: matrix.os == 'macos-latest'
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: roles/target/aarch64-apple-darwin/release/mining_proxy_sv2
          asset_name: mining-proxy-sv2-${{ env.RELEASE_VERSION }}-aarch64-apple-darwin
          tag: ${{ env.RELEASE_VERSION }}

  release_translator:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-20.04, macos-latest ]
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Set env
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

      - name: Compile Native
        run: cargo build --release --locked --manifest-path=roles/translator/Cargo.toml
              
      - name: Install cross
        run: cargo install cross

      - name: Compile Binaries for aarch64-unknown-linux-gnu
        if: matrix.os == 'ubuntu-20.04'
        run: cross build --release --locked --manifest-path=roles/translator/Cargo.toml --target aarch64-unknown-linux-gnu
  
      - name: Compile Binaries for arm-unknown-linux-gnueabi
        if: matrix.os == 'ubuntu-20.04'
        run: cross build --release --locked --manifest-path=roles/translator/Cargo.toml --target arm-unknown-linux-gnueabi

      - name: Install aarch64-apple-darwin target
        if: matrix.os == 'macos-latest'
        run: rustup target add aarch64-apple-darwin

      - name: Compile MacOS ARM64
        if: matrix.os == 'macos-latest'
        run: cargo build --release --locked --manifest-path=roles/translator/Cargo.toml --target=aarch64-apple-darwin

      - name: Upload Linux x86-64 binaries to release
        if: matrix.os == 'ubuntu-20.04'
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: roles/target/release/translator_sv2
          asset_name: translator-sv2-${{ env.RELEASE_VERSION }}-x86_64-linux-gnu
          tag: ${{ env.RELEASE_VERSION }}
             
      - name: Upload Linux aarch64 binaries to release
        if: matrix.os == 'ubuntu-20.04'
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: roles/target/aarch64-unknown-linux-gnu/release/translator_sv2
          asset_name: translator-sv2-${{ env.RELEASE_VERSION }}-aarch64-linux-gnu
          tag: ${{ env.RELEASE_VERSION }}
          
      - name: Upload Linux ARM binaries to release
        if: matrix.os == 'ubuntu-20.04'
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: roles/target/arm-unknown-linux-gnueabi/release/translator_sv2
          asset_name: translator-sv2-${{ env.RELEASE_VERSION }}-arm-linux-gnueabi
          tag: ${{ env.RELEASE_VERSION }}

      - name: Upload MacOS x86-64 binaries to release
        if: matrix.os == 'macos-latest'
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: roles/target/release/translator_sv2
          asset_name: translator-sv2-${{ env.RELEASE_VERSION }}-x86_64-apple-darwin
          tag: ${{ env.RELEASE_VERSION }}

      - name: Upload MacOS ARM64 binaries to release
        if: matrix.os == 'macos-latest'
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: roles/target/aarch64-apple-darwin/release/translator_sv2
          asset_name: translator-sv2-${{ env.RELEASE_VERSION }}-aarch64-apple-darwin
          tag: ${{ env.RELEASE_VERSION }}
