{
    "doc": [
        "This test does",
        "Mocking a mining device that connects to a pool and launchs a MG that mocks a template provider",
        "Launchs a pool",
        "Launchs a MG test that mocks a template provider",
        "Sends setup_connection to the pool and waits that arrives a message 0x01",
        "Sends open_standard_mining_channel to the pool and waits that the pool sends the following message with id",
        "MiningProtocol",
        "OpenStandardMiningChannelSuccess",
        "request_id"
    ],
    "common_messages": [
        {
            "message": {
                "type": "SetupConnection",
                "protocol": 0,
                "min_version": 2,
                "max_version": 2,
                "flags": 1,
                "endpoint_host": "",
                "endpoint_port": 0,
                "vendor": "",
                "hardware_version": "",
                "firmware": "",
                "device_id": ""
            },
            "id": "setup_connection"
        }
    ],
    "mining_messages": [
        {
            "message": {
                "type": "OpenStandardMiningChannel",
                "request_id": 89,
                "user_identity": "",
                "nominal_hash_rate": 10,
                "max_target": [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]
            },
            "id": "open_standard_mining_channel"
        },
        {
            "message": {
                "type": "SubmitSharesStandard",
                "channel_id": 1,
                "sequence_number": 0,
                "job_id": 0,
                "nonce": 174,
                "ntime": 1671116742,
                "version": 536870912
            },
            "id": "submit_shares"
        }
    ],
    "frame_builders": [
        {
            "type": "automatic",
            "message_id": "../../../../test/message-generator/messages/common_messages.json::setup_connection_mining_hom"
        },
        {
            "type": "automatic",
            "message_id": "open_standard_mining_channel"
        },
        {
            "type": "automatic",
            "message_id": "submit_shares"
        }
    ],
    "actions": [
        {
            "message_ids": ["setup_connection_mining_hom"],
            "role": "client",
            "results": [
                {
                    "type": "match_message_type",
                    "value": "0x01"
                }
            ],
            "actiondoc": "This action send a SetupConnection and check that receives a message type 0x01, that is SetupConnectionSuccess"
        },
        {
            "message_ids": ["open_standard_mining_channel"],
            "role": "client",
            "results": [
                {
                    "type": "match_message_field",
                    "value": [
                        "MiningProtocol",
                        "OpenStandardMiningChannelSuccess",
                        "request_id",
                        {"U32": 89}
                    ]
                },
                {
                    "type": "match_message_type",
                    "value": "0x20"
                },
                {
                    "type": "match_message_type",
                    "value": "0x1e"
                }
            ],
            "actiondoc": "This action sends OpenStandardMiningChannel to the pool and checks that the reply is OpenStandardMiningChannelSuccess SetNewPrevHash and NewMiningJob" 
        },
        {
            "message_ids": ["submit_shares"],
            "role": "client",
            "results": [
                {
                    "type": "match_message_type",
                    "value": "0x1c"
                }
             ],
            "actiondoc": "This action sends the message SubmitSharesStandard to the pool anche checks that the pool replies with SubmitSharesStandard.Success"
        },
        {
            "message_ids": [],
            "role": "client",
            "results": [
                {
                    "type": "match_message_type",
                    "value": "0x20"
                }
             ],
            "actiondoc": "This action checks that the messsage SetNewPrevhash is received"
      }
    ],
    "setup_commands": [
       {
           "command": "cargo",
           "args": [
                       "run",
                       "../../../test/message-generator/mock/template-provider-mock0.json"
           ],
           "conditions": {
               "WithConditions": {
                   "conditions": [
                       {
                           "output_string": "Running `target/debug/message_generator_sv2 ../../../test/message-generator/mock/template-provider-mock0.json`",
                           "output_location": "StdErr",
                           "condition": true
                       }
                   ],
                   "timer_secs": 60,
                   "warn_no_panic": false
               }
           }
       },
       {
            "command": "cargo",
            "args": [
                        "run",
                        "-p",
                        "pool",
                        "--",
                        "-c",
                        "./test/config/pool-mock-tp.toml"
            ],
            "conditions": {
                "WithConditions": {
                    "conditions": [
                        {
                            "output_string": "Listening for encrypted connection on: 0.0.0.0:34254",
                            "output_location": "StdOut",
                            "condition": true
                        }
                    ],
                    "timer_secs": 60,
                    "warn_no_panic": false
                }
            }
        }
    ],
    "execution_commands": [
    ],
    "cleanup_commands": [
    ],
    "role": "client",
    "downstream": {
        "ip": "127.0.0.1",
        "port": 34254,
        "pub_key": "2di19GHYQnAZJmEpoUeP7C3Eg9TCcksHr23rZCC83dvUiZgiDL"
    }
}
